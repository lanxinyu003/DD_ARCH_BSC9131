/******************************************************************************
 Copyright © 1995-2003,2004,2005-2014 Freescale Semiconductor Inc.
 All Rights Reserved
 
 This is proprietary source code of Freescale Semiconductor Inc., and its use
 is subject to the CodeWarrior EULA.  The copyright notice above does not 
 evidence any actual or intended publication of such source code.
  
*******************************************************************************/

/******************************************************************************
 $Date: 2012/07/15 16:46:50 $
 $Id: psc9x3x_hwi.h,v 1.5 2012/07/15 16:46:50 b05127 Exp $
 $Source: /cvsdata/SmartDSP/include/arch/starcore/psc9x3x/psc9x3x_hwi.h,v $
 $Revision: 1.5 $
******************************************************************************/

/******************************************************************************
 
 @File          psc9x3x_hwi.h

 @Description   PSC9X3X common Hardware Interrupts header file.

 @Cautions      None.
 
*//***************************************************************************/

#ifndef __PSC9X3X_HWI_H
#define __PSC9X3X_HWI_H


/**************************************************************************//**
 @Group         arch_9x3x_int_id  PSC9x3x HW Interrupts
 @{
*//***************************************************************************/


#define LEVEL_MODE                  0           /**< Level Interrupt mode */
#define EDGE_MODE                   1           /**< Edge Interrupt mode */
#define NORMAL_MODE                 EDGE_MODE   /**< Normal Interrupt mode */


// The first 8 interrupts are Core interrupts. They are not used by the
// OS Dispatcher.
//    0. TRAP
//    1. reserved
//    2. ILLEGAL
//    3. DEBUG
//    4. OVERFLOW
//    5. MMU
//    6. reserved
//    7. reserved

//******************************************************************************
// These Are The Interrupt Defines For PSC9X3X
//******************************************************************************


/************************************************************//**
 @Collection    Core Interrupts (not in EPIC)
 @{
*//*************************************************************/
#define OS_INT_TRAP0               0    /**< Internal exception (generated by a Trap0 instruction). */
#define OS_INT_TRAP1               1    /**< Internal exception (generated by a Trap1 instruction). */
#define OS_INT_TRAP2               2    /**< Internal exception (generated by a Trap2 instruction). */
#define OS_INT_TRAP3               3    /**< Internal exception (generated by a Trap3 instruction). */
/* 4 is reserved */
#define OS_INT_ILLEGAL             5    /**< Illegal instruction or set. */
#define OS_INT_DEBUG               6    /**< Debug exception (EOnCE) */
#define OS_INT_OVERFLOW            7    /**< Overflow exception (DALU). */
/* 8 is reserved */
#define OS_INT_OCE                 9    /**< OCE exception. */
#define OS_INT_IMMUAE              10   /**< Instruction MMU Address Error. */
#define OS_INT_DMMUAE              11   /**< Data MMU Address Error. */
/* 12 is reserved */
#define OS_INT_IEDC                13   /**< Instruction EDC Error. */
#define OS_INT_DEDC                14   /**< Data EDC Error. */
/* 15, 16, 17 are reserved */

/* @} */ /* end of core interrupts */

#define EPIC_INTERRUPTS_OFFSET     18   /**< The EPIC interrupts offset */


/************************************************************//**
 @Collection    Extended Core Interrupts
 @{
*//*************************************************************/
// Interrupts IRQ0 - IRQ8 Reserved for internal platform use.
#define OS_INT_ICAES               (EPIC_INTERRUPTS_OFFSET + 9)     /**< ICache end-of-sweep operation exception */
#define OS_INT_DCAES               (EPIC_INTERRUPTS_OFFSET + 10)    /**< DCache end-of-sweep operation exception */
#define OS_INT_L2AES               (EPIC_INTERRUPTS_OFFSET + 11)    /**< L2 Cache end-of-sweep operation exception. Operational in Titanium with L2 cache */
#define OS_INT_TM0                 (EPIC_INTERRUPTS_OFFSET + 12)    /**< Timer 0 interrupt */
#define OS_INT_TM1                 (EPIC_INTERRUPTS_OFFSET + 13)    /**< Timer 1 interrupt */
#define OS_INT_DPUA                (EPIC_INTERRUPTS_OFFSET + 14)    /**< DPU interrupt A */
#define OS_INT_DPUB                (EPIC_INTERRUPTS_OFFSET + 15)    /**< DPU interrupt B */
#define OS_INT_ICNCH               (EPIC_INTERRUPTS_OFFSET + 16)    /**< ICache non-cacheable hit exception */
#define OS_INT_DCNCH               (EPIC_INTERRUPTS_OFFSET + 17)    /**< DCache non-cacheable hit exception */
#define OS_INT_I_L2NCH             (EPIC_INTERRUPTS_OFFSET + 18)    /**< L2 Cache non-cacheable hit exception */
#define OS_INT_I_L2ESP             (EPIC_INTERRUPTS_OFFSET + 19)    /**< L2 Cache end-of-software pre-fetch */

/* @} */ /* end of Extended core interrupts */

/** @} */ // arch_9x3x_int_id

/* SoC Interrupts */
/*********************************/
#if defined(PSC9132) || defined(PSC9131)
#include "psc913x_hwi.h"
#endif

#endif // __PSC9X3X_HWI_H


